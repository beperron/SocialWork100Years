<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='mac' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.1015.1955                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='rankSet' inline='true' name='textscan.42091.781355914400' version='8.3'>
      <connection class='textscan' directory='/Users/beperron/Git/SocialWorkResearch/Data' filename='rankSet.csv'>
        <relation name='rankSet#csv' table='[rankSet#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Country' ordinal='0' />
            <column datatype='integer' name='articleCount' ordinal='1' />
            <column datatype='string' name='GDPperCapita' ordinal='2' />
            <column datatype='string' name='GDPRank' ordinal='3' />
            <column datatype='real' name='PPP2013' ordinal='4' />
            <column datatype='real' name='articleRank' ordinal='5' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[rankSet#csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>articleCount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[articleCount]</local-name>
            <parent-name>[rankSet#csv]</parent-name>
            <remote-alias>articleCount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDPperCapita</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GDPperCapita]</local-name>
            <parent-name>[rankSet#csv]</parent-name>
            <remote-alias>GDPperCapita</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDPRank</remote-name>
            <remote-type>129</remote-type>
            <local-name>[GDPRank]</local-name>
            <parent-name>[rankSet#csv]</parent-name>
            <remote-alias>GDPRank</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PPP2013</remote-name>
            <remote-type>5</remote-type>
            <local-name>[PPP2013]</local-name>
            <parent-name>[rankSet#csv]</parent-name>
            <remote-alias>PPP2013</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>articleRank</remote-name>
            <remote-type>5</remote-type>
            <local-name>[articleRank]</local-name>
            <parent-name>[rankSet#csv]</parent-name>
            <remote-alias>articleRank</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[rankSet#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Congo (Kinsasha)&quot;' value='&quot;Congo (Kinshasa)&quot;' />
          <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czech Republic&quot;' />
        </semantic-values>
      </column>
      <column caption='GDP Rank' datatype='string' name='[GDPRank]' role='dimension' type='nominal'>
      </column>
      <column caption='GD Pper Capita' datatype='string' name='[GDPperCapita]' role='dimension' type='nominal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Purchasing Power Parity GDP' datatype='real' name='[PPP2013]' role='dimension' type='ordinal'>
      </column>
      <column caption='Number of Social Work Articles' datatype='integer' name='[articleCount]' role='measure' type='quantitative'>
      </column>
      <column caption='Article Rank' datatype='real' name='[articleRank]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[PPP2013]' derivation='None' name='[none:PPP2013:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Exclusions (Country,Ppp2013)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Country:nk]' />
          <groupfilter function='level-members' level='[none:PPP2013:qk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='JournalsOverTime' inline='true' name='textscan.42091.869029907400' version='8.3'>
      <connection class='textscan' directory='/Users/beperron/Git/SocialWorkResearch/Data' filename='JournalsOverTime.csv'>
        <relation name='JournalsOverTime#csv' table='[JournalsOverTime#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='articleID' ordinal='1' />
            <column datatype='string' name='title' ordinal='2' />
            <column datatype='integer' name='year' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[JournalsOverTime#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>articleID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[articleID]</local-name>
            <parent-name>[JournalsOverTime#csv]</parent-name>
            <remote-alias>articleID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[JournalsOverTime#csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[JournalsOverTime#csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[JournalsOverTime#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Article ID' datatype='integer' name='[articleID]' role='dimension' type='ordinal'>
      </column>
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal'>
      </column>
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative'>
      </column>
      <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;[textscan.42091.869029907400].[usr:Calculation_6570328212219861:qk]&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;[textscan.42091.869029907400].[usr:Calculation_9650328211905674:qk]&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;[textscan.42091.869029907400]&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;[textscan.42091.872730810200].[max:n.grads:qk]&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;[textscan.42091.869029907400].[ctd:title:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='textscan.42091.872730810200'>
        <column-instance column='[n.grads]' derivation='Max' name='[max:n.grads:qk]' pivot='key' type='quantitative' />
        <column caption='N.Grads' datatype='integer' name='[n.grads]' role='dimension' type='ordinal'>
        </column>
      </datasource-dependencies>
    </datasource>
    <datasource caption='nsf' inline='true' name='textscan.42091.872730810200' version='8.3'>
      <connection class='textscan' directory='/Users/beperron/Git/SocialWorkResearch/Data' filename='nsf.csv'>
        <relation name='nsf#csv' table='[nsf#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='n.grads' ordinal='1' />
            <column datatype='integer' name='years' ordinal='2' />
            <column datatype='string' name='growth' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[nsf#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>n.grads</remote-name>
            <remote-type>20</remote-type>
            <local-name>[n.grads]</local-name>
            <parent-name>[nsf#csv]</parent-name>
            <remote-alias>n.grads</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[years]</local-name>
            <parent-name>[nsf#csv]</parent-name>
            <remote-alias>years</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>growth</remote-name>
            <remote-type>129</remote-type>
            <local-name>[growth]</local-name>
            <parent-name>[nsf#csv]</parent-name>
            <remote-alias>growth</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[nsf#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Growth' datatype='string' name='[growth]' role='dimension' type='nominal'>
      </column>
      <column caption='N.Grads' datatype='integer' name='[n.grads]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' caption='Years' datatype='integer' name='[years]' role='dimension' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='ArticlesOverTime' inline='true' name='textscan.42091.898116053200' version='8.3'>
      <connection class='textscan' directory='/Users/beperron/Git/SocialWorkResearch/Data' filename='ArticlesOverTime.csv'>
        <relation name='ArticlesOverTime#csv' table='[ArticlesOverTime#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='years' ordinal='1' />
            <column datatype='integer' name='year.count' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[ArticlesOverTime#csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>years</remote-name>
            <remote-type>20</remote-type>
            <local-name>[years]</local-name>
            <parent-name>[ArticlesOverTime#csv]</parent-name>
            <remote-alias>years</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year.count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year.count]</local-name>
            <parent-name>[ArticlesOverTime#csv]</parent-name>
            <remote-alias>year.count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[ArticlesOverTime#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Year.Count' datatype='integer' name='[year.count]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Years' datatype='integer' name='[years]' role='dimension' type='quantitative'>
      </column>
      <group name='[NoData]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='692' />
            <groupfilter function='member' level='[years]' member='1989' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='707' />
            <groupfilter function='member' level='[years]' member='1990' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='740' />
            <groupfilter function='member' level='[years]' member='1991' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='754' />
            <groupfilter function='member' level='[years]' member='1992' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='799' />
            <groupfilter function='member' level='[years]' member='1993' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='833' />
            <groupfilter function='member' level='[years]' member='1994' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='857' />
            <groupfilter function='member' level='[years]' member='1995' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='863' />
            <groupfilter function='member' level='[years]' member='1996' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='931' />
            <groupfilter function='member' level='[years]' member='1998' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='937' />
            <groupfilter function='member' level='[years]' member='1997' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='1095' />
            <groupfilter function='member' level='[years]' member='1999' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='1101' />
            <groupfilter function='member' level='[years]' member='2000' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='1252' />
            <groupfilter function='member' level='[years]' member='2001' />
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[year.count]' member='1278' />
            <groupfilter function='member' level='[years]' member='2002' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='textscan.42091.869029907400'>
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative'>
      </column>
    </datasource-dependencies>
    <datasource-dependencies datasource='textscan.42091.872730810200'>
      <column-instance column='[years]' derivation='None' name='[none:years:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' caption='Years' datatype='integer' name='[years]' role='dimension' type='ordinal'>
      </column>
    </datasource-dependencies>
    <datasource-dependencies datasource='textscan.42091.898116053200'>
      <column-instance column='[years]' derivation='None' name='[none:years:ok]' pivot='key' type='ordinal' />
      <column aggregation='Sum' caption='Years' datatype='integer' name='[years]' role='dimension' type='quantitative'>
      </column>
    </datasource-dependencies>
    <datasource-relationship source='textscan.42091.869029907400' target='textscan.42091.872730810200'>
      <column-mapping>
        <map key='[textscan.42091.869029907400].[none:year:ok]' value='[textscan.42091.872730810200].[none:years:ok]' />
      </column-mapping>
    </datasource-relationship>
    <datasource-relationship source='textscan.42091.869029907400' target='textscan.42091.898116053200'>
      <column-mapping>
        <map key='[textscan.42091.869029907400].[none:year:ok]' value='[textscan.42091.898116053200].[none:years:ok]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Eastern Hemisphere'>
      <table>
        <view>
          <datasources>
            <datasource caption='rankSet' name='textscan.42091.781355914400' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42091.781355914400'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo (Kinsasha)&quot;' value='&quot;Congo (Kinshasa)&quot;' />
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czech Republic&quot;' />
              </semantic-values>
            </column>
            <column caption='Purchasing Power Parity GDP' datatype='real' name='[PPP2013]' role='dimension' type='ordinal'>
            </column>
            <column caption='Number of Social Work Articles' datatype='integer' name='[articleCount]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[articleCount]' derivation='Avg' name='[avg:articleCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[PPP2013]' derivation='None' name='[none:PPP2013:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42091.781355914400].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42091.781355914400].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42091.781355914400].[Longitude (generated)]' field-type='quantitative' max='22847986.312272251' min='-3748761.639965964' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.42091.781355914400].[Latitude (generated)]' field-type='quantitative' max='13883009.843816377' min='-6846401.4113620045' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[textscan.42091.781355914400].[Latitude (generated)]' field-type='quantitative' fold='true' max='13883009.843816377' min='-6846401.4113620045' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42091.781355914400].[avg:articleCount:qk]' min='0.0' num-steps='4' palette='tableau-red' type='interpolated' />
            <encoding attr='size' field='[textscan.42091.781355914400].[avg:articleCount:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
            <encoding attr='color' field='[textscan.42091.781355914400].[none:PPP2013:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='in-tooltip' field='[textscan.42091.781355914400].[none:PPP2013:qk]' value='false' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_2' value='none' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[textscan.42091.781355914400].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='175' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[textscan.42091.781355914400].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[textscan.42091.781355914400].[none:PPP2013:qk]' />
              <lod column='[textscan.42091.781355914400].[none:Country:nk]' />
              <geometry column='[textscan.42091.781355914400].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='175' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.42091.781355914400].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[textscan.42091.781355914400].[avg:articleCount:qk]' />
              <lod column='[textscan.42091.781355914400].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-color' value='#b40f1e' />
                <format attr='mark-transparency' value='221' />
                <format attr='size' value='2' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#353535' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42091.781355914400].[Latitude (generated)] + [textscan.42091.781355914400].[Latitude (generated)])</rows>
        <cols>[textscan.42091.781355914400].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run>Excluded</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-10007205.562239435'>
                  <node-reference>
                    <axis>[textscan.42091.781355914400].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4540408.6895683436'>
                  <node-reference>
                    <axis>[textscan.42091.781355914400].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
                <projection name='EPSG:3857' u='-89.896257078855726' v='37.723285084564345' />
              </visual-coordinate>
            </point>
            <body x='158' y='-1' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='JournalsOverTime' name='textscan.42091.869029907400' />
            <datasource caption='ArticlesOverTime' name='textscan.42091.898116053200' />
            <datasource caption='nsf' name='textscan.42091.872730810200' />
          </datasources>
          <datasource-dependencies datasource='textscan.42091.869029907400'>
            <column-instance column='[title]' derivation='CountD' name='[ctd:title:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal'>
            </column>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42091.872730810200'>
            <column-instance column='[n.grads]' derivation='Max' name='[max:n.grads:qk]' pivot='key' type='quantitative' />
            <column caption='N.Grads' datatype='integer' name='[n.grads]' role='dimension' type='ordinal'>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='textscan.42091.898116053200'>
            <column-instance column='[year.count]' derivation='None' name='[none:year.count:qk]' pivot='key' type='quantitative' />
            <column caption='Year.Count' datatype='integer' name='[year.count]' role='dimension' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42091.869029907400].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42091.869029907400].[ctd:title:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[textscan.42091.872730810200].[max:n.grads:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42091.869029907400].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[textscan.42091.869029907400].[none:year:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42091.869029907400].[none:year:qk]' scope='cols' value='true' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42091.869029907400].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='line-ends' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='656' />
                <format attr='maxwidth' value='656' />
                <format attr='minheight' value='779' />
                <format attr='maxheight' value='779' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' y-axis-name='[textscan.42091.869029907400].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42091.869029907400].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='656' />
                <format attr='maxwidth' value='656' />
                <format attr='minheight' value='779' />
                <format attr='maxheight' value='779' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' y-axis-name='[textscan.42091.898116053200].[none:year.count:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[textscan.42091.869029907400].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='656' />
                <format attr='maxwidth' value='656' />
                <format attr='minheight' value='779' />
                <format attr='maxheight' value='779' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42091.898116053200].[none:year.count:qk] + [textscan.42091.869029907400].[Multiple Values])</rows>
        <cols>[textscan.42091.869029907400].[none:year:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Tree Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tree Map of Number of Social Work Publications (size) and Purchasing Parity Power (color) by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='rankSet' name='textscan.42091.781355914400' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42091.781355914400'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo (Kinsasha)&quot;' value='&quot;Congo (Kinshasa)&quot;' />
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czech Republic&quot;' />
              </semantic-values>
            </column>
            <column caption='Purchasing Power Parity GDP' datatype='real' name='[PPP2013]' role='dimension' type='ordinal'>
            </column>
            <column caption='Number of Social Work Articles' datatype='integer' name='[articleCount]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[articleCount]' derivation='Max' name='[max:articleCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[PPP2013]' derivation='None' name='[none:PPP2013:qk]' pivot='key' type='quantitative' />
            <column-instance column='[articleCount]' derivation='Sum' name='[sum:articleCount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42091.781355914400].[Exclusions (Country,Ppp2013)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:PPP2013:qk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:PPP2013:qk]' member='%null%' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kosovo&quot;' />
                    <groupfilter function='member' level='[none:Country:nk]' member='&quot;North America&quot;' />
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:Country:nk]' />
                  <hierarchy name='[none:PPP2013:qk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42091.781355914400].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eastern Europe&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Gambia&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Latin America&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Middle East&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;Western Europe&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42091.781355914400].[none:Country:nk]</column>
            <column>[textscan.42091.781355914400].[Exclusions (Country,Ppp2013)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='498' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42091.781355914400].[sum:articleCount:qk]' num-steps='4' palette='tableau-red' type='interpolated' />
            <encoding attr='color' field='[textscan.42091.781355914400].[max:articleCount:qk]' num-steps='4' palette='tableau-red' type='interpolated' />
            <encoding attr='color' field='[textscan.42091.781355914400].[none:PPP2013:qk]' num-steps='5' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42091.781355914400].[none:PPP2013:qk]' />
              <size column='[textscan.42091.781355914400].[max:articleCount:qk]' />
              <text column='[textscan.42091.781355914400].[none:Country:nk]' />
              <text column='[textscan.42091.781355914400].[sum:articleCount:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows></rows>
        <cols></cols>
      </table>
    </worksheet>
    <worksheet name='Western Hemisphere'>
      <table>
        <view>
          <datasources>
            <datasource caption='rankSet' name='textscan.42091.781355914400' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='textscan.42091.781355914400'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Congo (Kinsasha)&quot;' value='&quot;Congo (Kinshasa)&quot;' />
                <semantic-value key='&quot;Czechoslovakia&quot;' value='&quot;Czech Republic&quot;' />
              </semantic-values>
            </column>
            <column caption='Purchasing Power Parity GDP' datatype='real' name='[PPP2013]' role='dimension' type='ordinal'>
            </column>
            <column caption='Number of Social Work Articles' datatype='integer' name='[articleCount]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[articleCount]' derivation='Max' name='[max:articleCount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[PPP2013]' derivation='None' name='[none:PPP2013:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42091.781355914400].[Exclusions (Country,Ppp2013)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Country:nk]' />
                <groupfilter function='level-members' level='[none:PPP2013:qk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Country:nk]' member='&quot;United States&quot;' />
                <groupfilter function='member' level='[none:PPP2013:qk]' member='53101.010000000002' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42091.781355914400].[none:Country:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country:nk]' />
              <groupfilter function='empty-level' member='[none:Country:nk]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42091.781355914400].[none:Country:nk]</column>
            <column>[textscan.42091.781355914400].[Exclusions (Country,Ppp2013)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[textscan.42091.781355914400].[Longitude (generated)]' field-type='quantitative' max='1406247.1495024599' min='-20762322.163445313' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[textscan.42091.781355914400].[Latitude (generated)]' field-type='quantitative' max='12002421.61324288' min='-8726989.641935505' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[textscan.42091.781355914400].[Latitude (generated)]' field-type='quantitative' fold='true' max='12002421.61324288' min='-8726989.641935505' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[textscan.42091.781355914400].[max:articleCount:qk]' num-steps='4' palette='tableau-red' type='interpolated' />
            <encoding attr='size' field='[textscan.42091.781355914400].[max:articleCount:qk]' field-type='quantitative' max-size='1' min-size='0.01' type='quantsize' />
            <encoding attr='color' field='[textscan.42091.781355914400].[none:PPP2013:qk]' palette='tableau-blue' type='interpolated' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='border-style' id='annotation_2' value='none' />
            <format attr='border-style' id='annotation_3' value='none' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='true' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[textscan.42091.781355914400].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='175' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' y-axis-name='[textscan.42091.781355914400].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[textscan.42091.781355914400].[none:PPP2013:qk]' />
              <lod column='[textscan.42091.781355914400].[none:Country:nk]' />
              <geometry column='[textscan.42091.781355914400].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-transparency' value='175' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' y-axis-name='[textscan.42091.781355914400].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[textscan.42091.781355914400].[max:articleCount:qk]' />
              <lod column='[textscan.42091.781355914400].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-color' value='#b40f1e' />
                <format attr='mark-transparency' value='221' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='size' value='1' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([textscan.42091.781355914400].[Latitude (generated)] + [textscan.42091.781355914400].[Latitude (generated)])</rows>
        <cols>[textscan.42091.781355914400].[Longitude (generated)]</cols>
        <annotations>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='103'>
            <formatted-text>
              <run>Excluded&#10;from visualization (N = 7,079)&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-13810382.131287063'>
                  <node-reference>
                    <axis>[textscan.42091.781355914400].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4621911.4547593892'>
                  <node-reference>
                    <axis>[textscan.42091.781355914400].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
                <projection name='EPSG:3857' u='-124.060773480663' v='38.300131038784293' />
              </visual-coordinate>
            </point>
            <body x='-112' y='-31' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='0' text-width='126'>
            <formatted-text>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord axis-value='-16522641.547852457'>
                  <node-reference>
                    <axis>[textscan.42091.781355914400].[Longitude (generated)]</axis>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='8109102.1332006119'>
                  <node-reference>
                    <axis>[textscan.42091.781355914400].[Latitude (generated)]</axis>
                  </node-reference>
                </y-coord>
                <page-reference>
                </page-reference>
                <projection name='EPSG:3857' u='-148.42541436464089' v='58.668606258769984' />
              </visual-coordinate>
            </point>
            <body x='1' y='71' />
          </annotation>
        </annotations>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='77375' id='7' name='Tree Map' show-title='true' w='92800' x='3900' y='5125'>
        </zone>
        <zone h='7625' id='8' name='Tree Map' pane-specification-id='0' param='[textscan.42091.781355914400].[none:PPP2013:qk]' type='color' w='66900' x='16700' y='73125'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='79500' id='1' name='Sheet 4' show-title='true' w='54400' x='1500' y='3500'>
        </zone>
        <zone h='11000' id='2' leg-item-order='reversed' name='Sheet 4' pane-specification-id='4' param='[textscan.42091.869029907400].[:Measure Names]' type='color' w='14000' x='57900' y='5125'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Eastern Hemisphere'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42091.781355914400].[none:PPP2013:qk]' type='color' />
            <card pane-specification-id='2' param='[textscan.42091.781355914400].[avg:articleCount:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42091.781355914400].[avg:PPP2013:qk]</field>
          <field>[textscan.42091.781355914400].[avg:articleCount:qk]</field>
          <field>[textscan.42091.781355914400].[max:articleRank:qk]</field>
          <field>[textscan.42091.781355914400].[min:PPP2013:qk]</field>
          <field>[textscan.42091.781355914400].[none:Country:nk]</field>
          <field>[textscan.42091.781355914400].[none:PPP2013:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Western Hemisphere'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42091.781355914400].[none:PPP2013:qk]' type='color' />
            <card pane-specification-id='2' param='[textscan.42091.781355914400].[max:articleCount:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[textscan.42091.781355914400].[none:Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42091.781355914400].[avg:PPP2013:qk]</field>
          <field>[textscan.42091.781355914400].[min:PPP2013:qk]</field>
          <field>[textscan.42091.781355914400].[none:Country:nk]</field>
          <field>[textscan.42091.781355914400].[none:PPP2013:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42091.781355914400].[none:PPP2013:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42091.781355914400].[avg:PPP2013:qk]</field>
          <field>[textscan.42091.781355914400].[min:PPP2013:qk]</field>
          <field>[textscan.42091.781355914400].[none:Country:nk]</field>
          <field>[textscan.42091.781355914400].[none:PPP2013:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Dashboard 1'>
      <zones>
        <zone name='Tree Map' pane-specification-id='0' param='[textscan.42091.781355914400].[none:PPP2013:qk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
            <card pane-specification-id='4' param='[textscan.42091.869029907400].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[textscan.42091.869029907400].[:Measure Names]</field>
          <field>[textscan.42091.869029907400].[none:title:nk]</field>
          <field>[textscan.42091.869029907400].[none:year:qk]</field>
          <field>[textscan.42091.872730810200].[avg:n.grads:qk]</field>
          <field>[textscan.42091.872730810200].[none:growth:nk]</field>
          <field>[textscan.42091.872730810200].[none:n.grads:nk]</field>
          <field>[textscan.42091.898116053200].[none:year.count:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 2'>
      <zones>
        <zone name='Sheet 4'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42091.869029907400].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone leg-item-order='reversed' name='Sheet 4' pane-specification-id='4' param='[textscan.42091.869029907400].[:Measure Names]' type='color' />
      </zones>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Eastern Hemisphere' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Western Hemisphere' width='192'>
      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
      OUmS2K0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tree Map' width='192'>
      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
      /hvyiIF4CqN9TwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      9iKY0pwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAAsTAAALEwEAmpwY
      AAAfwklEQVR4nO2d53Nc15mnn9s5AN1ohEbOiaQEkZQokRIlWZIlyiNZljyS5fXMzq5na6q2
      akLt37Eft3Zramp3ZmvjJMtryyPJCrZyoJhzQM4ZaKBzuvfsBxAgIXQ3cJudAJznA4vVuOee
      t/ve370n/M57FCGEQCLZhyiKohiKHYREUkxM6/8Jh8PofRnE43EsFsuWz1VVxWg06jqX3jJC
      CIQQGAw713Ah4tI0DUVRUBQlb3Xs59/3fuMaujBPVVMZFV4HcI8AHA7Hjk94L06nc8tniUQC
      s9ms6zx6y2iahhBC149XiLhUVUVRFF0XSG8dhfgeQghUVcVkMm1/8C6Ja2E8wMJIlAefaMNg
      XHtAySaQZF+QiCaJBBOcfL1r4+YHKQDJfkDAmXdHMJoUbM7Nb5uM75G56Uls7ipMQkVBYzWS
      gHiYipo67BZ9rzqJpFiMXF7CbDXS2OPZ8reMAggGfFwbGCW4ukJdVTWxSBDMDqyTKxw50oOq
      qqiquqXcejtND3rLrHeG8llHNmU0Tdsol686CvE9YO277Pa4hCZYmQ9x5PmWlGUyCEBw/sI5
      Dj/+IqGVOZREnNUQiIifck/1Ricv3WiHnlGQbMoIIXSPtuitI5sy68fmO6799PsKLc7//R//
      i7JqL0vLYRprbJitNiZGRnj6lTfpqKtKWU5TNT79+9scf7UdkyX1YEkGASi8+bM/vfP/BhCC
      tWeaYH36IB6Ppxzt0DsKkm0ZvcNhhYhr/cbJZ1yF+h6l8vsKxYS7zMyZm1c4fLCV35y5xgNe
      F4PD83gPTdPVUJOy3KWPJmjqrcTmNKetY+djSYrCnWfbjotIJLlAi4eYmAvz/PEnmJj28erx
      ExgtFjyuObrbGlKWCSxHCfqiHD3VQjKZTHvunQtAIikSRqubv/wPf4EQgombywghaH2gOu3x
      kWCckcsLnHyje9vmlRSApKTRNEFgMcLotSUmby0zN+KnvMpGy6GqlDe3EIJv3x6m+9FajKbt
      m2NSAJKSQ1MF0wM+hi8tsjAewOow0fZQNSdf76a8ysZ7f3OZiZs+Wg5Vbik7cHYOt9eRcsgz
      FVIAkpJACIF/MUr/mVnGry/hqXfSedTLidc6MFuNG097IQRPvdnNh397k9q2cqyOu/NRq4sR
      nG4rXY94d1yvFICkqKhJwcT1BW6fniUWSdB7vI6X/vwh7GVbTZbrlFXaOPRkA2ffG+Xk610o
      ikIyrvL1Lwc5+UYXBuPOR6KkACRFIxpK8O5fX8Hb6uLRl9uobi7fcdlDJ+t596+vMDfqp67d
      zfn3x+g+Vouryq4rBukFkhSNkUsLNPV6eOrNHl03P4DBaODkG9189dYgodUY7ho7nQ+nng/I
      eB7dJSSSHCCEYPjSAl2P6r9p16msd9J8wMM7/+Uy3Y/WZjULLQUgKQqhlRjJhIarWl+T5V40
      VbC6ELnj9wlndY6MfYD+m1cw2d0sLS3RVO/FF4pDNEh1Uztej75XlkRyL/1n5mg/kv3TH2Bp
      Okhdh5uHnm3i618O8tKfP4RRRwcYthGAxWzi7Nmv6Oro4ONvB+msUBE2D6HbIzj7OjMuidRL
      Ni5CuOu+zEcd2ZRZj0vvksh8xpRtmfVVd7muQwgYu7bIM3/Sm3Vcy9MhJm/56Hu2EQC318bN
      r6bpfbxWV1wZ3aA3bt7kwIEHmJ2Zp6ethlgkBgk/VU1dG0sh0y1n07s0Tm+ZbJZE6q0jmzLZ
      LInUW0c2x+stk83Sw53WsTwTwuY04/GWZbUkMh5LcPadMb73s56Nside7WJhLKD7fszoBn3p
      ldcB6OvbcXwSybYMnJ2j65GtT+qdcvGDcfqeaaTMY9v4zGIz0di7s9nfe5GdYElB0VSN8RtL
      NB/camPYCVO3fXQc9WZd/rtIAUgKyvxYgAqvA1uZ/iZccCXG5Y8ncFXbshryTIUUgKSgDJ6f
      p/dEne5ymib46q0Bjv+oA5Mld7etFICkYCQTKlP9Phq6K3SVE0KwMhem75kmqhrLchqTFICk
      YEze9FHX4cZk1jdytzgR5PLvJ6jvcOc8JikAScEYvDBPz2P6Rn8S0SSn3x7ixKsdKIbcL8eV
      ApAUhFg4wepChDodT3EhBLMjfo680IK9PL09+n6QApAUhJErizQd8OgavRm+uEBoNUbzgdwM
      eaZCCkCSd4QQDJ2fp/Pozr0/wZUY/WfmdK3uygYpAEneCa/GSSY0Kht2NoIjhODiB2M88XqX
      7g6zXjIaPQavXsbm8TA4MExljZdINA7xEDXNXXQ0Zz+VLdlfTA2s0NhTgWEHnVghBDe+muHo
      qRacFda8x5ZRAKqSZMXvx784zcSySm8VCHs1S9Nz1FaWSTdoCqQbdCvLM0Eq6x0kEolty8yN
      +JkbWaHnsZq0Ca1y6VLNKID6hhZiqoq/sYOHGrysBGMQD1LT2CndoGmQbtCtdQSXY3Qe8W57
      r8QjSS7/bornf34Qc5rs47l2qWY8i6tyrdNSU6N/6loiWSfki1HmydycEZpgYTzAyTe6NqU6
      yTeyEyzJO4m4itma/k0thKD/7ByzI6u4a7JfIpkNUgCSvJKIrbW/jeb0t9rKfIThiwscfaE1
      Zy7PnSIFIMkrgaUI7hp72htbS64Z3U7+ZPPeXYVCCkCSV/yLUcorbWn/fvGjcYwmRXdCq1wh
      BSDJK/6lSNrUJ5O3fcTCal6tDtshBSDJK6sLEdzerQLQtLXEWI+90poXl+dOkblBJXklsBTd
      8gbQVMHpXw9x4kcdKCZ9Gx3mGvkGkOQNoQlCqzEc7s1ugVunZyirtGKxF//5KwUgyRvJpIbB
      oGzyAK3Mh5m85ePBpxuLGNldpAAkeSMeSW56yidiKosTAZ75415dOfzzScZ30PnPP8Hd1MS5
      0xdo7uwgFoogkjG8zd30HWwrUIiS3UpgKYqram0OQAjBmXdGaOypwGIrftNnnYyReJvqWVhZ
      xqAmmZ4P0uhUwVlBeHWVUCgk3aApkG7Qu/hmg5RVWUgkEoxfW0ZoGo0H3JtcocXOWZpRADW1
      TVTWNmE2l9HUWMtKKA7xIFV1LTida5Mb0g26GekGvVtH0BenqrGMZGztOp14tTPlApdi5izN
      eBabc20FT1/fAwB4ijdfIdmF+BcjtDxQxRf/NMCxl9owWfK7uisbSqMnItmTBH0xRi4t0NBd
      QWW9s9jhpEQKQJIXNFUjGkygGBUeeKqh2OGkRQpAkhcigQQGo8JjL7cX3OKsBykASc4RQnD+
      /VHcXntRfT47QQpAknNmBleYHfFTXlkci7MeSmdGQrInCCxFCfpi9DxaWxJen+2QbwBJztBU
      wdf/bxBvqyulC7QUkQKQ5Ixrn07T1ldNRa2DgC/zSrBSofTfUZJdwfJMiLouFw2daxvVxUIJ
      bM7Sv73kG0By30RDCb56a3Bj8bua1EjGtZIyvaUjY4QXv/yMyrYOzn57mrr6FtSkCokI3uYe
      DvY0FypGSQkjxNrqrmMvtWJ1rN1O4dU4Dpel5IdAYRsBVDd4MdrLqK1rwgKoahjsHgK+ZUKh
      SukGTcFed4MKDYYvL2ykOg/749R2uKhucW7UsbIQwlFhSZkLNF9xZVtHRgFU1TSA2cKhA4dQ
      RIQlfxwSQarrW2Vu0DTsdTfo6kKYT/93P3WtaxvdXfxwnGf/5OCmOkK+OJ5a547rK1k3qKN8
      bTsbh80OuKms1lWnZA+yOBHE6bZy+9tZlmdCnHy9a8sx/sVIzndzzBeyEyzRxezwKo//uJOr
      n07S81htyrF+/1I0ZSqUUkQKQKKLpakgakJDMShU1Di2/F0IQWBpd8wBgBSARAfxaJLgSozB
      C/OcfKOLW6dnthwjNFCTWkkufkmFFIBkx6zMhQkux3jsh+10Hq1hemCFZGLzCEsyoWIwKkVJ
      dJsNUgCSHTN5y8exl9uoaSnHbDXhbXMxN+LfdMz6ZhilvAbgXqQAJDtiaSrIufdGaer1bHzW
      +bCXgXNzm45bWYjgTtE3KFWkACTbkoyrfPubYZwVFipq797cdR0u5kcDxKN3N7PzL0Yor9od
      HWCQApBsgxAC32yYg0/UYy+3bNrqyGQ20nzQw/j15Y3P/IuRgm9zdD9IAUgyMnplkeGLCxhN
      Buo63Fva9j3H6xi6ML9hTdhNQ6CwjQCEEBtTz0IINE3T7cOQ7F5Cq7G1TatfbGFmaJW6dveW
      Yzy1DoIrMWLhJIg1b5Bzmx0hS4mMVogzn3yIw+vlq2+u0NPdSTwcRmhJaho7OXa0t1AxSoqA
      EDB508fjr3VithqZH/Vz6Mmt6U0MRgOtD1QxdGGe9qNVGIwKxhJJfLsTMgqgoa2F+eUVGmtc
      LAbiVFsBoxMtmZC5QdOwV9yg1z6dorKxjPIaC7FInFgkga3cmNLh2flINZ/9fT+1XWVYbKmP
      yVVcUMid4ps7qWtRaGr24XaXEYkmEWocp6sCq3mtqHSDbmYvuEHnx/wsT4d58JnGO+7OMM4K
      GyaTKaWwPbVmjCYDC6Mhyivtef0uBXWDmsxrT/faWi8Att3Tt5FkiRCCix+N89Sb3Rs3+8zA
      CrXtroxvtfbDNVz+3QQHHq8vVKg5Yfc01iR5RwjB1U+nePaPD2Avv9u0nRvzp+wA30v7Q9Ws
      LqTfEbJUkQKQbDB8cYFIII7ZdrdZKTSBbyZMVVNmf7+zwkrviToqG0ozCW46pAD2Obe/nWVx
      MkBgOUr/2Tke+YO2TU2dSDCBpgmsO0hydfInnVR4d48NAmRalH1NMqFy6XfjmMwGHn25nad+
      2oPJvPmZ6JsN4W0tL1KE+Ue+AfYxY1eXaOzx4KywMnptibKKrRNYs0Or1LRIAUj2GEIIbp2e
      xVPnwGg2MD/qx78U2XLcwkSA2nZXESIsDFIA+xT/UpR4JInJYuTpf9XL8R918OU/D2yaYBIC
      Asu7y9ujFymAfcrtb2ZYnllr31vtJpoOeLA6TAxfWtg4Jrgcxem2ptzYbq8gBbAPUZMat7+d
      5fBzzXjq1oYtFUXhxGudXHh/jGh4zcowO7xK9TbDn7udjAKIR6NEYzGGBgfw+/3MLS4zNz1F
      JJ7MVExS4kzcXMZVbefoqZZNnzvdVg492cDZd0YAWBgPUNeZeQJst5NxGPTC15/iamji8qWb
      eGsbMCcjCLMd+4SPI0d7UFU1pdFo3a+hB71l1q3a+azjfuLSE1s2dWT7PbSk4ML7Yzz+eico
      W8/Tc7yW3/7NVWaHV5kb8XPspfYd11WI3xfWfGC5+r0yCqC5o4NQEqrLrYSjMSwGARE/5Z6a
      jcmSdP6QbBZF6ykjhEBRFN31FCKubOopxPcAOPfbUdSkRk1LecpzGE0KJ17t5PN/vA0oWOyp
      DXC5jKuY1z2jABrbegDo6ujCoCisXVqBoqy1nOLxeErXYzZuyGzKCCF0lSlEXOsXKJ9xZfs9
      5keDXP1kiide78JkSt+x9ba6aDpQSTSYyHhcruLS+/vm8rrvaCZ4vbByz7+S3UXYHycWSlBe
      ZaPrEe+2xz/2Svumxe57FWmF2AcITXD2nTE8XgfeNhc25/b+e0VRMFn2/iDh3v+G+xwhBDe+
      nqGmuYyV+bXsDpK7SAHscSKBBE6XhbaHqlhdiFDXsbeHNfUiBbCHScRUPvuH29R2uBi8ME/7
      4RoMu2DbokIiBbBHEUJw5p1hDj5Rj9VhZvTyMt3HaosdVsmxSQCaphEMBvH7/emOl+wS4pEk
      9jILbX3VjF1dorLeQdkuytdTKDYJIBAI8PHHHzM8PFyseCQ5ILQS49t/GeHoqRY0VePKJxP0
      PddY7LBKkk0CcLvdWCwW3G7ZUdqtqEmNL38xwINPN6IoClP9K5RX2nZVvs5CsqUP0NjYSCAQ
      KEYskhwwfHGBxl4PlfVOhCa4/PsJDj8v93ROx5aJMFVVN5IILc/OYq2oZHF+BofFzGIwBtEg
      1Y1t1Hj27jK53cr8mB9bmZnOOzO9M0OrmG1GqhrKdGVr209sEUA0Gt2wPowO38JeVcfvPz/N
      IwcPoMRDCLuH4O0RHH2dMjViCoqVGjEZ1zj77ghP/rQLVU2iqnDxozGOvNBMIpEoegrCXJbJ
      W2pEv99PWVnZhgCa2zuJCTMP9rbjdNlZDQAJP5WNnXKj7DQUIzWiEIJvftnPkRdacFetXZfZ
      kVUMBoWGTg/KnbH/YqYgzFWZvKZGHBkZoa+vj8uXLwNQU7/WdmxqqNNVmaSwLE4GOXiyYWP1
      lhCCix+Oc+T5lo2bX5KaTY+p9vZ2Ll26RHm5bN/vFuZG/Vz7bIrKeufdXJ6Da09/aXvYnk0C
      cLlc+P3+lO16SekRCcY5994oT/xhF0bT2qXUVMHpt4c48VqnfPrvgJQNVZ/PV+g4JDoRmmBl
      NszJN7qwOu62ZCdvLeOusctx/x2yRQBOp5Nkcu8vhNjtXP9ymoWJ4KZcnJoquPzxBEdPtRYx
      st3FFgHMz88XIw6JDlZmI0z1+3jw6c32hombSzhcFirrd1eG5mKySQBzc3N0dnbS3CxnDksV
      NamxMhfhiT/swmC828ZPxFTOvDPCsZfaihfcLmSTABwOB0NDQ0QiW3NESkqDb/9lGLvbtCld
      oRCCc++NcuBE/a7apb0U2DQPEIvFOHXqVFaTGZL8M359CQWF2rbNyWoXJ4LMjfp57JXDRYps
      97LpDVBdXS1v/hJFUzUGzs1z7OW2TZ+rSY2v3hrgidc7N4ZCJTtH/mK7AFXVOPPOKM/+617M
      ls3Wj2ufT1HX4cbbsndTmOeTjIaKoetXcVRWcutWP3X19QRCMYgFqWnupr15+9wyktxw/bMp
      XFU2DN/ZgHp1IcLg+Xle+UvZ9MmWjAJIajHiihVrMsrAyAJ19jjCXs3S9CzeSqd0g6Yg127Q
      5ekwc+N+vvdHPRuW5vXjv3prgIdfbEYxiW3tzsV2XeayTME2yq5rbCWaiCNsLg7U1xKKxCEe
      pEa6QdOSSzeoEAItIfjeT3uxWDZfqrGrPqwOM219NTsWm3SDbiXjWdyVNbiB2toGXZVJcsPg
      uXmi4QT1XRWbPo+Gklz8YIyX/+KhrJPkStaQneASxb8YYeD8HIdO3n34CCGYG/Hzyf+8xdEX
      WnC4ZJaH+0XmBi1B1KRGYCnKUz/p2RjaDPqinHtvlOBKjEdebqWxq7LIUe4NpABKkEsfjeOu
      ddDY6yEeSXL9iylGLi/y0HNNdBz1oqrSrJgrpABKjJmhVQK+GA+/2MrqQpgvfzFIbbuLH/7V
      YSy2tcuVxcCJJA1SACWEEIKJG0s8/lonKPDlLwY4+kIrDd0V2xeWZIXsBJcIQhN8+YsB+p5p
      wuowEY+oRENJ6rvkssZ8IgVQItw+M0t5pQ17+drE4vTgCvWdbjnMmWekAEqA8Gqc8evL9D3T
      tPHZ6JVFWg7JkZ58IwVQZJIJjfEby3z/3xzcGPJUkxrLMyFq22XzJ99IARQRIQTn3h3B6jBh
      NN+9FIsTASpqHZit+mweEv1kHAU6/8UneJpaGbh5E3N5FSQTkIzibe7mwQNtBQpx7zLVv0I8
      ptJ+uHrT56NXl2g+4ClSVPuLjALwNtajWqwIixWzEBhFDJweQiurhEIh6QZNwU7doNFggmQi
      yaM/bN1Sx1S/j4NP1qV1eO5G12UuyxTMDVpd20g4HKa2uoa6uloicQ3iAarrWnE619akSjfo
      ZnbiBhVCcPpX/Rw91YLdaSWRSGzU4V+MYDIbKffYM4pot7kuc1WmoG5Qu7Mcu7Ocqhq5t1Su
      EEJw/YtpvG0uqpu2pqAcvbJI86FKOfxZIGQnuMBoqkBLapuGPNcRQjB520fHkZoiRLY/kQIo
      IImYykf//ToHTzak3K40HkkSCcRxVdlSlJbkAymAAiGE4Oy7Ixw62ZB2eHPylo/6rgqZ1LaA
      SAEUACEEvpkwiqLQnGF2d+LmMm191Wn/Lsk9UgAFILQaZ+LWMo//uDNt5zYRV1mcDMqc/gVG
      CiDPqEmNr98a2NbXs3gn0/O9+T4l+UcKIM/c+HKa5oOVeOoyZ2yeuLG0ZUZYkn+kAPLI4mQQ
      b5uL3sfrtz124qZPLnwpAlIAeSIRS/LNrwbXMrptM6qzMhfG6jBhK5N5WQtNxplgTVVBMSA0
      DRAkNQGaisliwagz8dN+QmiCb341zMMvtm4scMnEzICftr4qOftbBDIK4Oxnv6PhgUe4+O23
      NNRUsrwSAKCytoVjDx8oSIC7kbA/TuuDlRmbNGpCI7gSI7AUYeDsHM//6QMFjFCyTkYBNLS2
      YLRYqWvwosUTGBSBMJjQNFW6QdMQWIpy5jejfP/nBzbttRYLJznzzgirc2HUhEDToKzCiqvK
      zqGn63FUmLbN75ltTNmW2fdu0IbWbjAYqH7oMAqCWEIFLYnV7sRsWpvNlG7Qu6hJjTO/GeX4
      qx2YLZvLjNxewmozc+rf9WGxGzGZjRszvve6QXMdU7ZlpBsUMN6pxHjnKW+W2wenRQjB/FiA
      9iPVW7YoFUIwcmWRI8+34KyQ6QxLCdmTzRGzQ6ssTwfpemTrvgmaKggsRaluKitCZJJMSAHk
      gEgwzoUPx+k+lnrdxOJkEHeNXW5hVILIK5IDLn00ziM/aMViT92inLixRKs0uZUkUgD3ydCF
      eR54ujGtiU0IwfTgKo09cpa3FJECuA9W5sL0n53D6U7fsY344ySiyYzHSIqHFECWJBMqp98e
      4qk3ezK27edG/TQdkBneShUpgCxZng5x7KV2yjyZn+yjVxZpkM2fkkUKIAvGry/Rf3Zu22FN
      TRX45sLUyRSHJYsUgE7C/hhXP5vi0Zfbtz12ZS6MvdwiUxyWMBlngmPhMMJoZHJyivqaSnzh
      BMRCeOoacVr3n3VXCMHSVIjHftiONc2Q571M3FqmqVemOCxlMl7FC6c/x+RykYglOHttjGan
      CtZypmb8HD7SQzKZTGk00jRNt8lJbxk9Jrhs6/humZtfzWCxG2nocac9z3pcQgim+30cf61j
      2zqz+e75/n2FEPsirowCaOvsYiUaY3BmmOqKSiKJGIRXKG+swmRacy+m8rAbDAbd3na9ZQwG
      A0II3WWyjWtxIsD0wCrf//lBMp1CURQURUFNCPxLUVxVmVMcZhNXIX5fRVEK+vsWK66MAqhv
      7aIeONBzCAVYN6Cun8xgMKTMgamqqu6d0vWWWX/S6ilzP3HdOj3Hyde7MBozl1+/OAtjfhq6
      KzCZt2//642rEL/v+vfY63HtyFO6fsPv1/VKFz4Y4/gr7VgdO+/3jF5dpLFHtv9LHTkKtA2j
      V5eIhhJpfT6p0DTBzNAqzQflBFipIwWQgbA/zuCZeY7/qENXmzPij2N1mDBZ5M9b6sgrlAY1
      qTE/5ufJn3brtjGP31imrkPu8LgbkAJIw9VPJwn749jK9O8lPtXvkzk+dwlSACmYH/WzNBXk
      wIntE1p9FzWhsTwdorIhcyY4SWmg//G2x0kmVKKhBE+83oXBqKCmmG/TNMGF90eJRVRcVTZc
      1XbKq2y4a+z4ZiN4W1xy9dcuQQrgHoQm+PqXQ/Qcr8Velj4DwOC5OVYXIvQ8Vod/McL0gI/A
      6Sj+xSiJuMqJVzsKGLXkfpACuIeB8/PYykwZ3ZvRUIIrn0zyB/++b0uGByEEiVhy056/ktJG
      Xqk7aKrG8nSQh0+1pj1mfWPrQ082pExvoigKRrN+O4CkeGwrAE1NMjE1RSQUYH7Jx/zsDNF4
      crtiuwpNFXzxzwM8+nI7Jkt668LCWICl6VBWnWNJabJtE2hu7BYXL94iZPTQ4BRgsmF3LHHk
      aA+qqqZ0Za479vSgt8z6sXrKpKpDCMHFD8ap63ShGLaeb8N9mNT45tdDPP7jDlAEmpY6NZ8Q
      QlfavnRx5fL4+6mjFOPK5e+1rQDKPdWsBvxUN9UQScYgEaC88u42nukutt6boFBlvnu8bzZM
      aDXO0RdbMn6XG19NU9NaTlVT2Y7qvN+4cn18ocrstrgUsYMzaZrAoKy7QQWKstZyCoVCOJ1b
      x7uzyXWpt0w2uUG/W0c0lGDylo+2h6oxpem4JhIJYgGV9//bNV75qyNYHZmfGTvZKX67uHJ9
      fDZlssnBudviUpT1O3kbDAYF7vjcd1ik5BFC8M2vhijzWNPe/OucfnuYh3/Quu3NL9l97I27
      OQv6z8xRUeugtt2V8biJmz6SCVVaG/Yo+/KRFvRFcVXZ6D7mTTlkGY8mCSxFWZ2PcP6DMV78
      swe33eZIsjvZdwJIxFU+/8d+nv5ZLwajgWRcZfDCPOPXlwnfyeJmNBso86xZG078uIPyKlux
      w5bkiX0ngPO/HaX3RB2Ocgsjlxe4/PsJatvdPPKDVpwVVkwW46Y+Qbp1z5K9wb4RwJpNQcXp
      XrvJ3/5PF6lqcPL9nx+ivFI+4fcr+0YA0VCCd//zVcw2I7YyC8/8Ue+2m1dL9j77QgBqUuPT
      /3Mbo9nAyTe6qW4qk80aCbAPBBD0RfnsH25T4XXw7L/txWaXG51J7rJn5wGEEEzcXOat/3ge
      T52Tk290YzTJp75kM9u+ARKxMFdu9NNY52UlHIdokOrGNqorSnfDNzWpceGDMSZuLuOssHL4
      ueZihyQpUbYVwMr8FBe/OctM1yGqTVGEzUMgMIy9r7MkN8qOBpN8+U8DlNfYqGktp7HHjcVp
      IJFIFDQuPX0MvXXsxg2pc1mmYBtlA5gtVlo7WrG5rCRUAyRW8TR2bZjgSmmj7GgwwUd/d4O+
      7zXhqrZjthnx1Dk23Yz5jisbM5zeOrI5Xm8ZuVH2HSpqW3j+xeaUuUFLidBqjPf/6zUOP9dE
      bbubL/6xn1N/9kBJxiopHXb0mFKUe92gpXdDhVZjfPi31zn8XDPth2s4/eshjr/WkXF1l0QC
      e2AUKBKI8+HfXafv2SY6H64hEojTe6KOqobS7aRLSof/D9JS5hYRlrhNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      qTK1R5nWAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
