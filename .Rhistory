ukID<-uk$articleID
eng<-filter(locations, record=="England")
engID<-eng$articleID
remove<-ukID%in%engID
uk.remove<-cbind(uk, remove)
uk.remove<-filter(uk, remove==TRUE)
uk.remove.ID<-uk.remove$articleID
uk<-uk[!(uk$articleID%in%uk.remove.ID),]
ukID<-uk$articleID
ni<-filter(locations, record=="Northern Ireland")
niID<-ni$articleID
remove<-ukID%in%niID
uk.remove<-cbind(uk, remove)
uk.remove<-filter(uk, remove==TRUE)
uk.remove.ID<-uk.remove$articleID
uk<-uk[!(uk$articleID%in%uk.remove.ID),]
ukID<-uk$articleID
wales<-filter(locations, record=="Wales")
walesID<-wales$articleID
remove<-ukID%in%walesID
uk.remove<-cbind(uk, remove)
uk.remove<-filter(uk, remove==TRUE)
uk.remove.ID<-uk.remove$articleID
uk<-uk[!(uk$articleID%in%uk.remove.ID),]
ukID<-uk$articleID
locations<-filter(locations, record!="United Kingdom")  #removes old UK records
locations<-rbind(locations, uk)
locations$record[locations$record=="US"]<-"United States"
locations$record[locations$record=="Appalachia"]<-"United States"
locations$record[locations$record=="Bosnia"]<-"Bosnia-Herzegovina"
locations$record[locations$record=="Democratic Republic of Congo"]<- "Congo (Brazzaville)"
locations$record[locations$record=="Democratic Republic of the Congo"]<- "Congo (Brazzaville)"
locations$record[locations$record=="Holland"]<- "Netherlands"
locations$record[locations$record=="West Bank"]<-"Palestine"
locations$record[locations$record=="Gaza"]<-"Palestine"
locations$record[locations$record=="Gaza Strip"]<-"Palestine"
locations$record[locations$record=="Trinidad"]<-"Trinidad and Tobago"
locations$record[locations$record=="Gaza"]<-"Palestine"
locations$record[locations$record=="England"]<-"United Kingdom"
locations$record[locations$record=="Northern Ireland"]<-"United Kingdom"
locations$record[locations$record=="Scotland"]<-"United Kingdom"
locations$record[locations$record=="Wales"]<-"United Kingdom"
full.df<-filter(full.df, attributes!="location")
full.df<-rbind(full.df, locations)
#detach(package:stringi)
setwd("C:/Users/SSW/Documents/GitHub/SocialWork100Years/Data")
rankSet<-read.csv("rankSet.csv")
###Code for creating world maps.  The four countries in the UK are recoded as "United Kingdom" for data visualization.
library(rworldmap)
loc.tab<-table(locations$record)
loc.tab<-as.data.frame(loc.tab)
loc.tab<-select(loc.tab, country=Var1, frequency=Freq)
#join to a coarse resolution map
spdf <- joinCountryData2Map(loc.tab, joinCode="NAME", nameJoinColumn="country")
loc.tab2<-filter(loc.tab, frequency>=25)
spdf2 <- joinCountryData2Map(loc.tab2, joinCode="NAME", nameJoinColumn="country")
year.df <- filter(full.df, attributes == "pubYear") %>%
select(articleID, record)
location.df <- filter(full.df, attributes == "location") %>%
select(articleID, record)
year.location.df <- left_join(year.df, location.df, by = "articleID")
colnames(year.location.df) <- c("articleID", "pubYear", "country")
year.location.df <- year.location.df[!is.na(year.location.df$country), ]
location.summary.df <- group_by(year.location.df, country) %>%
summarize(Number = n()) %>%
arrange(desc(Number)) %>%
slice(1:6) %>%
select(country)
location.df.withUS <- location.df[location.df$record %in% location.summary.df$country, ]
year.location.df.withUS <- left_join(location.df.withUS, year.df, by = "articleID")
colnames(year.location.df.withUS) <- c("articleID", "country", "pubYear")
year.location.df.withUS <- group_by(year.location.df.withUS, country, pubYear) %>%
summarise(N = n())
location.summary.df.noUS <- group_by(year.location.df, country) %>%
summarize(Number = n()) %>%
arrange(desc(Number)) %>%
slice(2:7) %>%
select(country)
location.df.noUS <- location.df[location.df$record %in% location.summary.df.noUS$country, ]
year.location.df.noUS <- left_join(location.df.noUS, year.df, by = "articleID")
colnames(year.location.df.noUS) <- c("articleID", "country", "pubYear")
year.location.df.noUS <- group_by(year.location.df.noUS, country, pubYear) %>%
summarise(N = n())
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
plot.location.withUS <- ggplot(year.location.df.withUS, aes(pubYear, N, group = country, colour=country)) +
geom_line() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
title = element_text(size = 10),
legend.title=element_blank())  +
scale_y_continuous(limits = c(0,700)) +
xlab("Year") +
ylab("Articles") +
scale_x_discrete(breaks=c(seq(1989, 2013, 2))) +
scale_colour_manual(values=cbPalette) +
ggtitle("Number of Articles by Country and Year")
plot.location.noUS <- ggplot(year.location.df.noUS, aes(pubYear, N, group = country, colour=country)) +
geom_line() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
title = element_text(size = 10),
legend.title=element_blank())  +
scale_y_continuous(limits = c(0,150)) +
xlab("Year") +
ylab("Articles") +
scale_x_discrete(breaks=c(seq(1989, 2013, 2))) +
scale_colour_manual(values=cbPalette) +
ggtitle("Number of Articles by Country and Year, United States Excluded")
nsf <- data.frame(c(rep(NA, 13), 238, 273, 304, 323, 308, 287, 338, 332, 308, 289, 280, NA), as.factor(seq(1989,2013, 1)))
growth <- c(rep("Unknown", 14), rep("Increase", 2), rep("Decrease", 3), "Increase",
rep("Decrease", 4), "Unknown")
nsf <- cbind(nsf, growth)
colnames(nsf) <- c("n.grads", "years", "growth")
#write.csv(nsf, file="nsf.csv")
years <- c(1989:2015)
programs <- rep(NA, 27)
gade <- as.data.frame(cbind(as.character(years), programs))
gade$programs <- as.numeric(gade$programs)
gade[15, 2] <- 72
gade[27, 2] <- 86
colnames(gade) <- c("years", "programs")
pages.tmp <- full.df %>% filter(attributes == "pages")
years.tmp <- full.df %>% filter(attributes == "pubYear")
pages.df <- left_join(pages.tmp, years.tmp, by = "articleID") %>%
select(record.y, record.x) %>%
rename(years = record.y, pages = record.x) %>%
mutate(pages = as.numeric(pages)) %>%
group_by(years) %>%
summarise(
Median.Pages = median(pages, na.rm=TRUE),
Mean.Pages = mean(pages, na.rm=TRUE),
Std.Pages = sd(pages, na.rm=TRUE))
plot.PhD <- ggplot(nsf, aes(years, n.grads, group=1)) +
geom_line(linetype="dotted", colour = "#0072B2", size = .75) +
geom_point(colour = "#0072B2", size = .75) +
scale_y_continuous(breaks = c(seq(0, 350, 25)), limits = c(200,350)) +
ylab("Doctoral degrees") +
xlab("Year") +
geom_text(aes(label = n.grads), vjust = -1.2, size = 2.75) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
title = element_text(size = 10)) +
ggtitle("Number of Earned Social Work Doctoral Degrees by Year")
colnames(n.journals.year) <- c("years", "journals")
n_authors2 <- rename(n_authors2, years = ID, Avg.Authors = Average, Mdn.Authors = Median, Sd.Authors = Standard_Deviation)
scholarly.df <- left_join(articles.year.df, n.journals.year, by = "years")
scholarly.df <- left_join(scholarly.df, n_authors2, by = "years")
scholarly.df <- left_join(scholarly.df, nsf, by = "years")
scholarly.df <- left_join(scholarly.df, pages.df, by = "years")
scholarly.df[c(26, 27), ] <- rep(NA)
scholarly.df[26, 1] <- 2014
scholarly.df[27, 1] <- 2015
scholarly.df <- mutate(scholarly.df, years = as.numeric(years)) %>%
rename(article.count = year.count, journal.count = year.count, program.growth = growth)
scholarly.df$gade <- rep(NA, nrow(scholarly.df))
scholarly.df$gade[15] <- 72
scholarly.df$gade[27] <- 86
#write.csv(scholarly.df, file = "scholarship.csv")
getwd()
setwd("~/Git/SocialWorkResearch")
save.image(file = "socialWorkHistory.Rdata")
rm(list=ls())
load("/Users/beperron/Git/SocialWorkResearch/socialWorkHistory.Rdata")
#load("/Users/SSW/Documents/GitHub/SocialWork100Years/socialWorkHistory.Rdata")
# Load required packages
library(ggplot2)
library(dplyr)
library(gridExtra)
library(rworldmap)
# Read data files
load("/Users/beperron/Git/SocialWorkResearch/Data/ebscoFULL.R")
load("/Users/beperron/Git/SocialWorkResearch/Data/proQuest.R")
hodge <- readLines("/Users/beperron/Git/SocialWorkResearch/search_specifications/hodge.txt", n = -1)
countries.csv <- read.csv("/Users/beperron/Git/SocialWorkResearch/Data/countries.csv")
#load("/Users/SSW/Documents/GitHub/SocialWork100Years/Data/ebscoFULL.R")
#load("/Users/SSW/Documents/GitHub/SocialWork100Years/Data/proQuest.R")
#hodge <- readLines("/Users/SSW/Documents/GitHub/SocialWork100Years/search_specifications/hodge.txt", n = -1)
#countries.csv<-read.csv("/Users/SSW/Documents/GitHub/SocialWork100Years/Data/countries.csv")
# Load special functions
source("/Users/beperron/Git/SocialWorkResearch/functions/appendData.R")
source("/Users/beperron/Git/SocialWorkResearch/functions/shortArticles.R")
source("/Users/beperron/Git/SocialWorkResearch/functions/titleMatching.R")
source("/Users/beperron/Git/SocialWorkResearch/functions/otherDocuments.R")
source("/Users/beperron/Git/SocialWorkResearch/functions/titleMatching.R")
source("/Users/beperron/Git/SocialWorkResearch/functions/fewArticles.R")
#source("/Users/SSW/Documents/GitHub/SocialWork100Years/functions/appendData.R")
#source("/Users/SSW/Documents/GitHub/SocialWork100Years/functions/shortArticles.R")
#source("/Users/SSW/Documents/GitHub/SocialWork100Years/functions/titleMatching.R")
#source("/Users/SSW/Documents/GitHub/SocialWork100Years/functions/otherDocuments.R")
#source("/Users/SSW/Documents/GitHub/SocialWork100Years/functions/titleMatching.R")
#source("/Users/SSW/Documents/GitHub/SocialWork100Years/functions/fewArticles.R")
pretty <- function(x){
x <- prettyNum(x,big.mark=",",scientific=F)
x
}
appendData.f()
append.articles <- length(which(full.df$attributes == "article"))
append.journals <- filter(full.df, attributes == "journal") %>%
summarise(Unique = n_distinct(record))
unique.titles <- filter(full.df, attributes == "journal") %>%
group_by(record) %>%
summarise(
N = n())
shortArticles.f()
titleMatching.f()
articles.titleMatching <- length(which(full.df$attributes == "article"))
journals.titleMatching <- filter(full.df, attributes == "journal") %>%
summarise(Unique = n_distinct(record))
otherDocuments.f()
articles.otherDocuments <- length(which(full.df$attributes == "article"))
journals.otherDocuments <- filter(full.df, attributes == "journal") %>%
summarise(Unique = n_distinct(record))
fewArticles.f()
articles.final <- length(which(full.df$attributes == "article"))
journals.final <- filter(full.df, attributes == "journal") %>%
summarise(Unique = n_distinct(record))
unique.titles <- filter(full.df, attributes == "journal") %>%
group_by(record) %>%
summarise(N = n())
unique.titles <- filter(full.df, attributes == "journal") %>%
group_by(record) %>%
mutate(Hodge.list = ifelse(record %in% hodge == TRUE, 1, 0)) %>%
summarise(N = n(),
Hodge.list = max(Hodge.list)) %>%
mutate(Hodge = ifelse(Hodge.list == 1, "Y", "N"))
n.so.yr <- filter(full.df, attributes == "journal" | attributes == "pubYear")
n.so <- filter(full.df, attributes == "journal") %>% mutate(title = record) %>%
select(-attributes, -record)
n.yr <- filter(full.df, attributes == "pubYear") %>% mutate(year = record ) %>%
select(-attributes, -record)
n.so.yr <- left_join(n.so, n.yr) %>%
group_by(title) %>%
summarise(first = min(year), last = max(year), n = n()) %>%
arrange(title)
H <- unique.titles$Hodge
final.list <- cbind(n.so.yr, H)
final.list <- arrange(final.list, desc(n))
n.articles.year <- filter(full.df, attributes == "pubYear")
year.split <- split(n.articles.year, n.articles.year$record)
year.count <- unlist(lapply(year.split, nrow))
year.count <- year.count[order(names(year.count))]
years <- names(year.count)
articles.year.df <- data.frame(years, year.count)
rownames(articles.year.df) <- NULL
plot.article.count <- ggplot(articles.year.df, aes(as.factor(years),
y = year.count, group=1)) +
geom_line(colour="black") +
#geom_point(colour="red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8), title = element_text(size = 10), plot.title=element_text(size=10)) +
xlab("Year") +
ylab("Articles") +
ggtitle("A. Number of Articles by Year") +
scale_x_discrete(breaks=c(seq(1989, 2013, 2))) +
scale_y_continuous(breaks = c(seq(0, 2500, 200))) +
annotate("rect", xmin = 2008-1989+1, xmax =  2012-1989+1,
ymin = 1700, ymax = 2050, alpha = .20, fill = "#0072B2") +
annotate("rect", xmin = 2005-1989+1, xmax =  2007-1989+1,
ymin = 1400, ymax = 1750, alpha = .20, fill= "#0072B2")
n.journals.year <- filter(full.df, attributes == "journal") %>%
select(articleID, record)
n.year <- filter(full.df, attributes == "pubYear") %>%
select(articleID, record)
n.journals.year <- left_join(n.journals.year, n.year, by = "articleID", copy=TRUE) %>%
group_by(record.y) %>%
summarise(Journal.count = n_distinct(record.x))
plot.journal.count <- ggplot(n.journals.year, aes(as.factor(record.y),
y = Journal.count, group=1)) +
geom_line(colour="black") +
#geom_point(colour="red") +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size=8), title = element_text(size = 10), plot.title=element_text(size=10)) +
xlab("Year") +
ylab("Journals") +
ggtitle("B. Number of Journals by Year") +
scale_x_discrete(breaks=c(seq(1989, 2013, 2))) +
scale_y_continuous(breaks = c(seq(0, 100, 10)), limits = c(20, 70)) +
annotate("rect", xmin = 2008-1989+1, xmax =  2012-1989+1,
ymin = 55, ymax = 70, alpha = .20, fill= "#0072B2") +
annotate("rect", xmin = 2005-1989+1, xmax =  2007-1989+1,
ymin = 53, ymax = 62, alpha = .20, fill = "#0072B2")
year.df <- full.df %>%
filter(attributes == "pubYear") %>%
select(id = articleID, pubYear = record)
authors.df <- full.df %>%
filter(attributes == "author") %>%
select(id = articleID, author = record)
n_authors <- authors.df %>%
group_by(id) %>%
summarise(n=n())
n_authors <- n_authors%>%
left_join(year.df) %>%
group_by(pubYear) %>%
mutate(n = as.numeric(n)) %>%
summarise(median.n = median(n),
average.n = mean(n),
min.n = min(n),
max.n = max(n),
std.dev  = sd(n) )
n_authors2 <- n_authors%>%
select(median.n, average.n, std.dev) %>%
rename(Median = median.n, Average = average.n, Standard_Deviation =std.dev)
n_authors2$ID <- as.factor(c(1989:2013))
n_authors2_melted <- reshape2::melt(n_authors2, id.vars = "ID")
colnames(n_authors2_melted) <- c("pubYear", "summaryStat", "value")
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
plot.author.count <- ggplot(n_authors2_melted, aes(x = pubYear, y = value, group = summaryStat, colour = summaryStat)) +
geom_line(size = .75) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
title = element_text(size = 10),
legend.title=element_blank()) +
scale_colour_manual(values=cbPalette)  +
scale_x_discrete(breaks=c(seq(1989, 2013, 2))) +
scale_y_continuous(limits = c(0,2.5)) +
ylab("Value") +
xlab("Year") +
ggtitle("Authors Per Article by Year")
LO.df <- filter(full.df, attributes == "location") %>%
group_by(record) %>%
summarise(Country = unique(record),
N = n()) %>%
arrange(desc(N)) %>%
select(-record)
LO.df2 <- filter(full.df, attributes == "abstract" |
attributes == "article" | attributes == "keyword")
indx.country <- paste(countries.csv$x, collapse = "[\\s|[[:punct:]]]|")
library(stringi)
countries.extracted <- na.omit(within(LO.df2, text1 <- stri_extract(LO.df2$record, regex=indx.country)))[-2]
countries.extracted$text1<-gsub("[[:punct:]]", "", countries.extracted$text1)
countries.extracted$text1<-gsub("^\\s+|\\s+$", "", countries.extracted$text1)
new.countries<-unique(countries.extracted[,c("articleID","text1")])
new.countries<-mutate(new.countries, attributes="location")
new.countries<-select(new.countries, articleID, attributes, record=text1)
loc<-filter(full.df, attributes=="location")
locations<-rbind(loc, new.countries)
locations<-unique(locations[,c("articleID","attributes","record")])
locations<-filter(locations, record!="NA")
#Set of code to address labeling issues related to the United Kingdom
locations$record[locations$record=="Great Britain"]<- "United Kingdom"    #Combines Great Britain and UK records
uk<-filter(locations, record=="United Kingdom")  #creates temp DF with only UK records
ukID<-uk$articleID
#next four blocks of code check to see if the United Kindgom and each country are both listed as a research site and eliminates the UK location record when this was the case.  This means that remaining UK records represent cases of research within the UK in an unspecified country.
scot<-filter(locations, record=="Scotland")
scotID<-scot$articleID
remove<-ukID%in%scotID
uk.remove<-cbind(uk, remove)
uk.remove<-filter(uk, remove==TRUE)
uk.remove.ID<-uk.remove$articleID
uk<-uk[!(uk$articleID%in%uk.remove.ID),]
ukID<-uk$articleID
eng<-filter(locations, record=="England")
engID<-eng$articleID
remove<-ukID%in%engID
uk.remove<-cbind(uk, remove)
uk.remove<-filter(uk, remove==TRUE)
uk.remove.ID<-uk.remove$articleID
uk<-uk[!(uk$articleID%in%uk.remove.ID),]
ukID<-uk$articleID
ni<-filter(locations, record=="Northern Ireland")
niID<-ni$articleID
remove<-ukID%in%niID
uk.remove<-cbind(uk, remove)
uk.remove<-filter(uk, remove==TRUE)
uk.remove.ID<-uk.remove$articleID
uk<-uk[!(uk$articleID%in%uk.remove.ID),]
ukID<-uk$articleID
wales<-filter(locations, record=="Wales")
walesID<-wales$articleID
remove<-ukID%in%walesID
uk.remove<-cbind(uk, remove)
uk.remove<-filter(uk, remove==TRUE)
uk.remove.ID<-uk.remove$articleID
uk<-uk[!(uk$articleID%in%uk.remove.ID),]
ukID<-uk$articleID
locations<-filter(locations, record!="United Kingdom")  #removes old UK records
locations<-rbind(locations, uk)
locations$record[locations$record=="US"]<-"United States"
locations$record[locations$record=="Appalachia"]<-"United States"
locations$record[locations$record=="Bosnia"]<-"Bosnia-Herzegovina"
locations$record[locations$record=="Democratic Republic of Congo"]<- "Congo (Brazzaville)"
locations$record[locations$record=="Democratic Republic of the Congo"]<- "Congo (Brazzaville)"
locations$record[locations$record=="Holland"]<- "Netherlands"
locations$record[locations$record=="West Bank"]<-"Palestine"
locations$record[locations$record=="Gaza"]<-"Palestine"
locations$record[locations$record=="Gaza Strip"]<-"Palestine"
locations$record[locations$record=="Trinidad"]<-"Trinidad and Tobago"
locations$record[locations$record=="Gaza"]<-"Palestine"
locations$record[locations$record=="England"]<-"United Kingdom"
locations$record[locations$record=="Northern Ireland"]<-"United Kingdom"
locations$record[locations$record=="Scotland"]<-"United Kingdom"
locations$record[locations$record=="Wales"]<-"United Kingdom"
full.df<-filter(full.df, attributes!="location")
full.df<-rbind(full.df, locations)
#detach(package:stringi)
setwd("C:/Users/SSW/Documents/GitHub/SocialWork100Years/Data")
rankSet<-read.csv("rankSet.csv")
###Code for creating world maps.  The four countries in the UK are recoded as "United Kingdom" for data visualization.
library(rworldmap)
loc.tab<-table(locations$record)
loc.tab<-as.data.frame(loc.tab)
loc.tab<-select(loc.tab, country=Var1, frequency=Freq)
#join to a coarse resolution map
spdf <- joinCountryData2Map(loc.tab, joinCode="NAME", nameJoinColumn="country")
loc.tab2<-filter(loc.tab, frequency>=25)
spdf2 <- joinCountryData2Map(loc.tab2, joinCode="NAME", nameJoinColumn="country")
year.df <- filter(full.df, attributes == "pubYear") %>%
select(articleID, record)
location.df <- filter(full.df, attributes == "location") %>%
select(articleID, record)
year.location.df <- left_join(year.df, location.df, by = "articleID")
colnames(year.location.df) <- c("articleID", "pubYear", "country")
year.location.df <- year.location.df[!is.na(year.location.df$country), ]
location.summary.df <- group_by(year.location.df, country) %>%
summarize(Number = n()) %>%
arrange(desc(Number)) %>%
slice(1:6) %>%
select(country)
location.df.withUS <- location.df[location.df$record %in% location.summary.df$country, ]
year.location.df.withUS <- left_join(location.df.withUS, year.df, by = "articleID")
colnames(year.location.df.withUS) <- c("articleID", "country", "pubYear")
year.location.df.withUS <- group_by(year.location.df.withUS, country, pubYear) %>%
summarise(N = n())
location.summary.df.noUS <- group_by(year.location.df, country) %>%
summarize(Number = n()) %>%
arrange(desc(Number)) %>%
slice(2:7) %>%
select(country)
location.df.noUS <- location.df[location.df$record %in% location.summary.df.noUS$country, ]
year.location.df.noUS <- left_join(location.df.noUS, year.df, by = "articleID")
colnames(year.location.df.noUS) <- c("articleID", "country", "pubYear")
year.location.df.noUS <- group_by(year.location.df.noUS, country, pubYear) %>%
summarise(N = n())
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
plot.location.withUS <- ggplot(year.location.df.withUS, aes(pubYear, N, group = country, colour=country)) +
geom_line() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
title = element_text(size = 10),
legend.title=element_blank())  +
scale_y_continuous(limits = c(0,700)) +
xlab("Year") +
ylab("Articles") +
scale_x_discrete(breaks=c(seq(1989, 2013, 2))) +
scale_colour_manual(values=cbPalette) +
ggtitle("Number of Articles by Country and Year")
plot.location.noUS <- ggplot(year.location.df.noUS, aes(pubYear, N, group = country, colour=country)) +
geom_line() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
title = element_text(size = 10),
legend.title=element_blank())  +
scale_y_continuous(limits = c(0,150)) +
xlab("Year") +
ylab("Articles") +
scale_x_discrete(breaks=c(seq(1989, 2013, 2))) +
scale_colour_manual(values=cbPalette) +
ggtitle("Number of Articles by Country and Year, United States Excluded")
nsf <- data.frame(c(rep(NA, 13), 238, 273, 304, 323, 308, 287, 338, 332, 308, 289, 280, NA), as.factor(seq(1989,2013, 1)))
growth <- c(rep("Unknown", 14), rep("Increase", 2), rep("Decrease", 3), "Increase",
rep("Decrease", 4), "Unknown")
nsf <- cbind(nsf, growth)
colnames(nsf) <- c("n.grads", "years", "growth")
#write.csv(nsf, file="nsf.csv")
years <- c(1989:2015)
programs <- rep(NA, 27)
gade <- as.data.frame(cbind(as.character(years), programs))
gade$programs <- as.numeric(gade$programs)
gade[15, 2] <- 72
gade[27, 2] <- 86
colnames(gade) <- c("years", "programs")
pages.tmp <- full.df %>% filter(attributes == "pages")
years.tmp <- full.df %>% filter(attributes == "pubYear")
pages.df <- left_join(pages.tmp, years.tmp, by = "articleID") %>%
select(record.y, record.x) %>%
rename(years = record.y, pages = record.x) %>%
mutate(pages = as.numeric(pages)) %>%
group_by(years) %>%
summarise(
Median.Pages = median(pages, na.rm=TRUE),
Mean.Pages = mean(pages, na.rm=TRUE),
Std.Pages = sd(pages, na.rm=TRUE))
plot.PhD <- ggplot(nsf, aes(years, n.grads, group=1)) +
geom_line(linetype="dotted", colour = "#0072B2", size = .75) +
geom_point(colour = "#0072B2", size = .75) +
scale_y_continuous(breaks = c(seq(0, 350, 25)), limits = c(200,350)) +
ylab("Doctoral degrees") +
xlab("Year") +
geom_text(aes(label = n.grads), vjust = -1.2, size = 2.75) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
title = element_text(size = 10)) +
ggtitle("Number of Earned Social Work Doctoral Degrees by Year")
colnames(n.journals.year) <- c("years", "journals")
n_authors2 <- rename(n_authors2, years = ID, Avg.Authors = Average, Mdn.Authors = Median, Sd.Authors = Standard_Deviation)
scholarly.df <- left_join(articles.year.df, n.journals.year, by = "years")
scholarly.df <- left_join(scholarly.df, n_authors2, by = "years")
scholarly.df <- left_join(scholarly.df, nsf, by = "years")
scholarly.df <- left_join(scholarly.df, pages.df, by = "years")
scholarly.df[c(26, 27), ] <- rep(NA)
scholarly.df[26, 1] <- 2014
scholarly.df[27, 1] <- 2015
scholarly.df <- mutate(scholarly.df, years = as.numeric(years)) %>%
rename(article.count = year.count, journal.count = year.count, program.growth = growth)
scholarly.df$gade <- rep(NA, nrow(scholarly.df))
scholarly.df$gade[15] <- 72
scholarly.df$gade[27] <- 86
#write.csv(scholarly.df, file = "scholarship.csv")
getwd()
save.image(file = "socialWorkHistory.Rdata")
ls()
names(full.df)
unique(full.df$attributes)
source('~/.active-rstudio-document', echo=TRUE)
ls()
nrow(article.count.initial)
nrow(journal.count.initial)
source('~/.active-rstudio-document', echo=TRUE)
journal.count.initial
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
